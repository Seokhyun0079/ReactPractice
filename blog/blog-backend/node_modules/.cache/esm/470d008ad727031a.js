let Koa,Router,bodyParser,mongoose,api,jwtMiddleiware;_d72‍.w("koa",[["default",["Koa"],function(v){Koa=v}]]);_d72‍.w("koa-router",[["default",["Router"],function(v){Router=v}]]);_d72‍.w("koa-bodyparser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_d72‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_d72‍.w("./api",[["default",["api"],function(v){api=v}]]);_d72‍.w("./lib/jwtMiddleware",[["default",["jwtMiddleiware"],function(v){jwtMiddleiware=v}]]);require('dotenv').config();






// import createFakeData from './createFakeData';


const {PORT, MONGO_URI} = process.env;

mongoose.connect(MONGO_URI, {useNewUrlParser : true, useFindAndModify : false})
.then(()=>{
    console.log('Connected to MongoDB');
    // createFakeData();
})
.catch(e => {
    _d72‍.g.console.error(e);
});


const app = new Koa();
const router = new Router();

router.use('/api', api.routes());

app.use(bodyParser());
app.use(jwtMiddleiware);

app.use(router.routes()).use(router.allowedMethods());

const port = PORT || 4000;

app.listen(port, ()=> {
    _d72‍.g.console.log('Listenig to port %d'
    , port);
});
