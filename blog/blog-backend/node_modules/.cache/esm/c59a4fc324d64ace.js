_24d‍.x([["write",()=>write],["list",()=>list],["read",()=>read],["remove",()=>remove],["replace",()=>replace],["update",()=>update]]);let postId = 1;
const posts = [
    {
        id:1,
        title : '제목',
        body : '내용'
    }
];

       const write = ctx =>{
    const {title, body} = ctx.request.body;
    postId += 1;
    const post = {id : postId, title, body};
    posts.push(post);
    ctx.body = post;
}

       const list = ctx =>{
    console.log('일단 열루 오는거임?');
    ctx.body = posts;
}

       const read = ctx => {
    const { id} = ctx.params;
    const post = posts.find(p => p.id.toString === id);

    if(!post){
        ctx.status = 404;
        ctx.body = {
            message : '포스트가 존재하지 않습니다.'
        };
        return;
    }
};

       const remove = ctx => {
    const { id} = ctx.params;
    const index = posts.findIndex(p => p.id.toString() === id);
    if(index === -1){
        ctx.status = 404;
        ctx.body = {
            message : '포스트가 존재하지 않습니다.',
        };
        return;
    }
    posts.splice(index, 1);
    ctx.status = 204;
};

       const replace = ctx =>{
    const {id} = ctx.params;
    const index = posts.findIndex(p => p.id.toString() === id);
    if(idex === -1){
        ctx.status = 404;
        ctx.body ={
            message : '포스트가 존재하지 않습니다.'
        };
        return;
    }
    post[index] = {
        id,
        ...ctx.request.body
    };
    ctx.body = posts[index];
};

       const update = ctx =>{
    const {id} = ctx.params;
    const index = posts.findIndex(p => p.id.toString() === id);
    if(index === -1){
        ctx.status = 404;
        ctx.body = {
            message: '포스트가 존재하지 않습니다.'
        };
    return;
    }
    posts[index] = {
        ...posts[index],
        ...ctx.request.body,
    };
    ctx.body = posts[index];
}
