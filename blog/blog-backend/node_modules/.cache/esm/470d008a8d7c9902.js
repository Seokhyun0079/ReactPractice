let Koa,Router,bodyParser,mongoose,api,jwtMiddleiware,serve,async;_8d7‍.w("koa",[["default",["Koa"],function(v){Koa=v}]]);_8d7‍.w("koa-router",[["default",["Router"],function(v){Router=v}]]);_8d7‍.w("koa-bodyparser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_8d7‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_8d7‍.w("./api",[["default",["api"],function(v){api=v}]]);_8d7‍.w("./lib/jwtMiddleware",[["default",["jwtMiddleiware"],function(v){jwtMiddleiware=v}]]);_8d7‍.w("koa-static",[["default",["serve"],function(v){serve=v}]]);_8d7‍.w("../node_modules/rxjs/internal/scheduler/async",[["async",["async"],function(v){async=v}]]);require('dotenv').config();






// import createFakeData from './createFakeData';




const {PORT, MONGO_URI} = process.env;

mongoose.connect(MONGO_URI, {useNewUrlParser : true, useFindAndModify : false})
.then(()=>{
    console.log('Connected to MongoDB');
    // createFakeData();
})
.catch(e => {
    _8d7‍.g.console.error(e);
});


const app = new Koa();
const router = new Router();

router.use('/api', api.routes()).use(router.allowedMethods());

const buildDirectory = path.resolve(__dirname, '../../blog-frontend/build');
app.use(serve(buildDirectory));
app.use(async ctx => {
    if(ctx.status === 404 && ctx.path.indexOf('/api') !== 0){
        await RTCDtmfSender(ctx, 'index.html', {root : buildDirectory});
    }
});

const port = PORT || 4000;

app.listen(port, ()=> {
    _8d7‍.g.console.log('Listenig to port %d'
    , port);
});
